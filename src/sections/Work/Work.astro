---
import FeaturedProject from "./elements/FeaturedProject/FeaturedProject.astro";
import { getCollection } from "astro:content";
import Row from "@components/Grid/Row.astro";
import Column from "@components/Grid/Column.astro";
import Button from "@components/Button/Button.astro";
import SectionTitle from "@components/SectionTitle/SectionTitle.astro";

const allProjects = await getCollection("projects");

const isEven = (n: number) => n % 2 === 0;
---

<div class="container">
  <SectionTitle>See my work</SectionTitle>

  <astro-projects-grid class="projects-grid">
    <Row class="project-row">
      <Column size={6}>
        {
          allProjects.splice(0, allProjects.length / 2).map((project, i) => (
            <div class:list={["project-container", { first: i === 0 }]}>
              <FeaturedProject project={project} />
            </div>
          ))
        }
      </Column>
      <Column size={6}>
        {
          allProjects.splice(allProjects.length / 2 - 1).map((project, i) => (
            <div class:list={["project-container", { first: i === 0 }]}>
              <FeaturedProject project={project} />
            </div>
          ))
        }
      </Column>
    </Row>
  </astro-projects-grid>
</div>

<style lang="scss">
  .projects-grid {
    display: block;
    margin-top: var(--spacing-3xl);
  }

  .project-row {
    > *:last-child {
      margin-top: var(--spacing-3xl);
    }
  }

  .project-container:not(:first-child) {
    margin-top: var(--spacing-3xl);
  }
</style>

<script>
  import { vhPercent } from "@scripts/utils/gsap";
  import { gsap } from "gsap";

  class ProjectsGridContainer extends HTMLElement {
    constructor() {
      super();

      gsap.context(() => {
        const projects = gsap.utils.toArray<HTMLElement>(".project-container");

        for (const project of projects) {
          gsap.from(project, {
            scale: 0.9,
            opacity: 0.4,
            y: 100,
            scrollTrigger: {
              trigger: project,
              start: "top " + vhPercent(100),
              end: "top " + vhPercent(60),
              scrub: 1,
            },
          });
        }
      }, this);
    }
  }

  customElements.define("astro-projects-grid", ProjectsGridContainer);
</script>
