---
import { Icon } from "astro-icon/components";
import SmallSkillBox from "../SmallSkillBox/SmallSkillBox.astro";
---

<astro-cloud class="icons">
  <Icon name="cloud" />
  <div class="tech-container">
    <div class="aws">
      <SmallSkillBox name="skills/AWS" displayName="Cloud Practitioner" />
    </div>
    <div class="azure">
      <SmallSkillBox name="skills/Azure" displayName="Fundamentals" />
    </div>
  </div>
</astro-cloud>

<style lang="scss">
  .icons {
    display: block;
    position: relative;
    height: 100%;
  }

  [data-icon="cloud"] {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  .tech-container {
    width: 100%;
    position: absolute;
    bottom: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(50%);
    z-index: 1;

    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-sm);

    *:first-child {
      margin-left: var(--spacing-2xl);
    }

    *:last-child {
      margin-right: var(--spacing-2xl);
    }
  }
</style>

<script>
  import { gsap } from "gsap";

  class AstroCloud extends HTMLElement {
    constructor() {
      super();

      gsap.context(() => {
        const tl = gsap.timeline({
          defaults: { yoyoEase: true },
          paused: true,
          yoyo: true,
        });
        const initialGap = parseFloat(
          gsap.getProperty(".tech-container", "gap").toString()
        );
        tl.to(".tech-container", {
          gap: 0,
          ease: "power2.out",
        });
        tl.to(".aws, .azure", {
          duration: 0.6,
          ease: "power4.inOut",
          marginLeft: (_, target: HTMLElement) => {
            return parseFloat(
              gsap.getProperty(target, "marginRight").toString()
            );
          },
          marginRight: (_, target: HTMLElement) => {
            return parseFloat(
              gsap.getProperty(target, "marginLeft").toString()
            );
          },
        });
        tl.to(".tech-container", {
          gap: initialGap,
          ease: "power2.in",
        });

        this.addEventListener("mouseenter", () => {
          if (tl.isActive()) return;
          tl.resume();
          tl.reversed(!tl.reversed());
        });
      }, this);
    }
  }

  customElements.define("astro-cloud", AstroCloud);
</script>
