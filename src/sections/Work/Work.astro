---
import FeaturedProject from "./elements/FeaturedProject/FeaturedProject.astro";
import { getCollection } from "astro:content";
import Row from "@components/Grid/Row.astro";
import Column from "@components/Grid/Column.astro";
import Button from "@components/Button/Button.astro";
import SectionTitle from "@components/SectionTitle/SectionTitle.astro";

const allProjects = await getCollection("projects");
---

<div class="container">
  <SectionTitle>See my work</SectionTitle>

  <astro-projects-grid class="projects-grid">
    {
      allProjects.map((project, i) => (
        <div class:list={["project-container", { first: i === 0 }]}>
          <FeaturedProject project={project} />
        </div>
      ))
    }
  </astro-projects-grid>
</div>

<style lang="scss">
  .projects-grid {
    margin-top: var(--spacing-3xl);
    display: grid;
    grid-template-columns: repeat(12, minmax(0, 1fr));
    grid-auto-rows: 200px 300px;
    grid-column-gap: var(--col-gutter, 24px);
    column-gap: var(--col-gutter, 24px);

    .project-container {
      align-self: stretch;
      padding-top: 300px;

      &:nth-child(odd) {
        grid-column: 1 / span 6;
        grid-row: auto / span 4;
      }

      &:nth-child(even) {
        grid-column: 7 / -1;
        grid-row: auto / span 4;
      }

      &:nth-child(2) {
        grid-row: 2 / span 4;
      }

      &:first-child {
        padding-top: 0;
        grid-row: 1 / span 3;
      }
    }
  }
</style>

<script>
  import { vhPercent } from "@scripts/utils/gsap";
  import { gsap } from "gsap";

  class ProjectsGridContainer extends HTMLElement {
    constructor() {
      super();

      gsap.context(() => {
        const projects = gsap.utils.toArray<HTMLElement>(".project-container");

        for (const project of projects) {
          gsap.from(project, {
            scale: 0.9,
            opacity: 0.8,
            y: 250,
            scrollTrigger: {
              trigger: project,
              start: "top " + vhPercent(95),
              end: "top " + vhPercent(20),
              scrub: 1,
            },
          });
        }
      }, this);
    }
  }

  customElements.define("astro-projects-grid", ProjectsGridContainer);
</script>
