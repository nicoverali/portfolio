---
export type ButtonColor = "onPrimary" | "onBackground" | "secondary";

interface Props {
  href?: string;
  outline?: boolean;
  color?: ButtonColor;
  size?: "text" | "caption";
}

import Arrow from "@components/Arrow/Arrow.astro";

const { href, size = "text", color = "onBackground", outline } = Astro.props;
const ButtonElement = href ? "a" : "button";
---

<ButtonElement
  href={href}
  class:list={[color, { caption: size === "caption", outline }]}
>
  <slot />
  <Arrow angle={-45} width={16} />
</ButtonElement>

<style lang="scss">
  a,
  button {
    position: relative;
    padding: var(--spacing-md);
    background-color: var(--color-text-on-background);
    color: var(--color-background);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-text);
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    gap: var(--spacing-xs);
    cursor: pointer;
    transition:
      color 200ms ease,
      background-color 200ms ease;

    &.onPrimary {
      background-color: var(--color-text-on-primary);
      color: var(--color-primary);
    }

    &.secondary {
      background-color: var(--color-secondary);
      color: var(--color-text-on-secondary);
    }

    &:hover {
      text-decoration: underline;
      background-color: var(--color-secondary);
      color: var(--color-text-on-secondary);
    }

    &:active {
      text-decoration: none;
    }

    &.outline {
      color: var(--color-text-on-background);
      background-color: transparent;
      border: 1px solid var(--color-text-on-background);
    }
  }
</style>
