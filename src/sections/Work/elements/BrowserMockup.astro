---
import Arrow from "@components/Arrow/Arrow.astro";

interface Props {
  address?: string;
}

const { address } = Astro.props;
---

<div class="browser-mockup">
  <div class="toolbar">
    <div class="left-buttons">
      <div class="button red"></div>
      <div class="button yellow"></div>
      <div class="button green"></div>

      <div class="arrows">
        <Arrow width={0} angle={-180} />
        <Arrow width={0} />
      </div>
    </div>
    <div class="address-bar">
      {address}
    </div>
  </div>
  <slot />
</div>

<style lang="scss">
  @import "../../../styles/screens.scss";

  $macos-bg-color: rgba(#f0efee, 0.95);
  $macos-address-bg-color: #dbd9d8;
  $macos-border-color: rgba(#f7f6f5, 0.2);
  $macos-outer-border-color: rgba(#c4c6c9, 0.4);
  $macos-inner-border-color: #d3d2d1;
  $macos-dark-bg-color: rgba(#3b3b3b, 0.95);
  $macos-dark-address-bg-color: #282725;
  $macos-dark-border-color: rgba(#797877, 0.2);
  $macos-dark-outer-border-color: rgba(0, 0, 0, 0.4);
  $macos-dark-inner-border-color: #100f0e;

  .browser-mockup {
    transform: rotate3d(20deg, 0, 15deg) skew(20);
    border-radius: 6px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    border: 0.1px solid $macos-border-color;
    box-shadow:
      0 0 0 0.1px $macos-outer-border-color,
      0 8px 16px 0 rgba(0, 0, 0, 0.1),
      0 2px 6px 0 rgba(0, 0, 0, 0.1);

    &.dark {
      border-color: $macos-dark-border-color;
      box-shadow:
        0 0 0 0.1px $macos-dark-outer-border-color,
        0 8px 16px 0 rgba(0, 0, 0, 0.1),
        0 2px 6px 0 rgba(0, 0, 0, 0.1);
      .toolbar {
        background-color: $macos-dark-bg-color;
        border-color: $macos-dark-inner-border-color;
        .address-bar {
          background-color: $macos-dark-address-bg-color;
        }
      }
    }

    .toolbar {
      display: grid;
      height: 18px;
      padding: 4px 8px;
      grid-template-columns: 1fr 1.5fr 1fr;
      align-items: center;
      border-bottom: 1px solid;

      background-color: $macos-bg-color;
      border-color: $macos-inner-border-color;

      @media screen and (min-width: $screen-lg-min) {
        height: 20px;
      }

      @media screen and (max-width: $screen-sm-min) {
        height: 14px;
      }

      .left-buttons {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 3px;
        justify-content: start;

        .button {
          height: 5px;
          width: 5px;
          border-radius: 100%;

          &.red {
            background-color: #e36961;
          }

          &.yellow {
            background-color: #f3b35d;
          }

          &.green {
            background-color: #61be61;
          }
        }

        .arrows {
          display: flex;
          gap: 48px;
          color: #787878;
          transform: scale(0.4);
        }
      }

      .address-bar {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        background-color: $macos-address-bg-color;
        border-radius: 3px;
        padding-top: 1px;
        text-align: center;
        font-size: 6px;
        color: rgba(0, 0, 0, 0.4);
        font-family: verdana;
        font-weight: 600;
      }
    }
  }
</style>

<script>
  import { isDarkMode } from "@scripts/stores";

  isDarkMode.subscribe((isDarkMode) => {
    const mockups = document.querySelectorAll(".browser-mockup");
    for (const mockup of mockups) {
      mockup.classList.toggle("dark", isDarkMode);
    }
  });
</script>
