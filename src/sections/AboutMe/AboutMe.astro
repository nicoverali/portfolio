---
import Card from "@components/Card/Card.astro";
import GridCol from "@components/Grid/GridCol.astro";
import GridOffset from "@components/Grid/GridOffset.astro";
import GridRow from "@components/Grid/GridRow.astro";
import LinkButton from "@components/LinkButton/LinkButton.astro";
---

<astro-about-me-animations-container>
  <section class="about-me">
    <GridRow>
      <GridOffset xs={2} />
      <GridCol xs={10}>
        <p class="background-text">Currently based in Argentina</p>
      </GridCol>
    </GridRow>

    <div class="top">
      <GridRow yAlign={{ xs: "middle" }}>
        <GridCol xs={6}>
          <h2>
            <span>Hey! ðŸ‘‹</span>
            <span>I'm NicolÃ¡s Vera</span>
            <span>a Software Engineer</span>
          </h2>
        </GridCol>
        <GridCol xs={6}>
          <div class="cards-container">
            <div class="card">
              <Card>
                <p>
                  I am a
                  <span class="highlight">Computer Science graduate</span>
                  with a passion for technology.
                </p>
              </Card>
            </div>

            <div class="card">
              <Card>
                <p>
                  I understand the importance of
                  <span class="highlight">user experience</span> and always strive
                  to create intuitive and enjoyable experiences for the people using
                  my applications.
                </p>
              </Card>
            </div>
            <div class="card">
              <Card>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed
                  <span class="highlight">vitae dictum sapien</span>. Nam mollis
                  pellentesque quam eget consequat.
                </p>
              </Card>
            </div>
          </div>
        </GridCol>
      </GridRow>
    </div>

    <GridRow>
      <GridCol xs={2}>
        <div class="download-cv">
          <LinkButton href=""> Download CV </LinkButton>
        </div>
      </GridCol>
      <GridCol xs="auto">
        <div class="skills">
          <img src="/media/skills/Docker.svg" />
          <img src="/media/skills/java.svg" />
          <img src="/media/skills/Javascript.svg" />
          <img src="/media/skills/MongoDb.svg" />
          <img src="/media/skills/nestjs.svg" />
          <img src="/media/skills/NextJs.svg" />
          <img src="/media/skills/NodeJs.svg" />
          <img src="/media/skills/PostgreSQL.svg" />
          <img src="/media/skills/React.svg" />
          <img src="/media/skills/Typescript.svg" />
        </div>
      </GridCol>
    </GridRow>
  </section>
</astro-about-me-animations-container>

<style>
  section.about-me {
    position: relative;
    display: flex;
    flex-direction: column;
    padding-bottom: 64px;
    height: calc(100vh - var(--el-header-height));
  }

  .background-text {
    position: absolute;
    margin: 0;
    z-index: -1;
    opacity: 0.5;
    top: var(--spacing-lg);
    text-align: right;
    color: var(--color-primary);
    font-size: var(--font-size-display);
  }

  .top {
    flex: 1;
  }

  h2 {
    display: flex;
    flex-direction: column;
    flex: 1;
    position: relative;
    font-size: var(--font-size-h1);
    font-weight: normal;
    line-height: 150%;
  }

  h2 span:last-child {
    position: relative;
  }
  h2 span:last-child::after {
    content: "";
    position: absolute;
    z-index: -1;
    height: 100%;
    width: 100%;
    left: 64px;
    top: 30%;
    bottom: 0;
    background-color: var(--color-primary);
    -webkit-mask-image: url(/media/brushed.svg);
    mask-image: url(/media/brushed.svg);
    mask-size: contain;
    mask-repeat: no-repeat;
  }

  .cards-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    margin-top: var(--spacing-xxl);
  }

  .cards-container .card:nth-child(1) {
    position: relative;
    width: 70%;
    left: var(--spacing-lg);
  }

  .cards-container .card:nth-child(2) {
    position: relative;
    left: var(--spacing-xxl);
    width: calc(100% - var(--spacing-xxl));
  }

  .cards-container .card:nth-child(3) {
    position: relative;
    width: 60%;
  }

  .cards-container .card .highlight {
    font-weight: 600;
  }

  section.about-me .download-cv {
    height: 100%;
    flex: 1;
    border-right: 1px solid var(--color-primary-light-border);
    display: flex;
    align-items: center;
  }

  section.about-me .skills {
    display: flex;
    flex: 1;
    justify-content: space-between;
  }

  section.about-me .skills img {
    width: 40px;
    height: 40px;
  }
</style>

<script>
  import { gsap } from "gsap";

  class AboutMeAnimationsContainer extends HTMLElement {
    constructor() {
      super();
      gsap.context(() => {
        gsap.from(".about-me *:not(.card)", {
          opacity: 0,
          y: 20,
          duration: 1,
          scrollTrigger: {
            fastScrollEnd: true,
            once: true,
            trigger: ".about-me",
            start: "top top+=200px",
          },
        });

        const tl = gsap.timeline({
          delay: 1,
          scrollTrigger: {
            trigger: ".about-me",
            start: "top top+=80px",
            end: "+=200%",
            fastScrollEnd: true,
            preventOverlaps: true,
            anticipatePin: 2,
            pin: true,
            scrub: 1,
          },
        });

        const cardsFrom = {
          opacity: 0,
          y: 32,
          boxShadow: "0 4px 4px 0 var(--color-shadow)",
        };
        const cardsTo = function (i: number) {
          return {
            keyframes: [
              {
                opacity: 1,
                y: 0 - i * 16,
              },
              {
                boxShadow: `0 ${i * 2}px ${i * 2}px 0 var(--color-shadow)`,
              },
            ],
          };
        };

        tl.fromTo(".card:first-child", cardsFrom, {
          ...cardsTo(0),
          duration: 1,
          delay: 1,
        });
        tl.to(
          ".background-text",
          {
            overwrite: "auto",
            immediateRender: false,
            opacity: 0,
            duration: 1,
          },
          ">-1"
        );

        for (let i = 1; i <= 2; i++) {
          tl.fromTo(`.card:nth-child(${i + 1})`, cardsFrom, {
            ...cardsTo(i),
            duration: 1,
          });
        }
      }, this);
    }
  }

  customElements.define(
    "astro-about-me-animations-container",
    AboutMeAnimationsContainer
  );
</script>
