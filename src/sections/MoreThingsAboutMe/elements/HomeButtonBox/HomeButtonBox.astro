---
import { Icon } from "astro-icon/components";

interface Props {
  class?: string;
  name: string;
  state?: string;
  icon?:
    | "bulb"
    | "lock"
    | "ceiling-bulb"
    | "tv"
    | "speaker"
    | "videocam"
    | "scene";
  color?: "off" | "yellow" | "blue";
  opacity?: number;
}

const {
  class: className,
  name,
  state,
  icon = "bulb",
  color = "yellow",
  opacity = 0.4,
} = Astro.props;
---

<div class:list={["input-container", className]}>
  <div class:list={["icon-container", color]}>
    <Icon is:inline={true} name={`ha/${icon}`} />
  </div>

  <div class="text-container">
    <p>{name}</p>
    {state && <p>{state}</p>}
  </div>
</div>

<style lang="scss" define:vars={{ opacity }}>
  .input-container {
    opacity: var(--opacity);
    width: 40%;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--spacing-md);
    padding: var(--spacing-sm);
    padding-right: var(--spacing-xl);
    border-radius: var(--radius-md);
    background-color: var(--color-paper-on-paper);
    border: 1px solid var(--color-paper-border-on-paper);
    user-select: none;
  }

  .icon-container {
    padding: var(--spacing-sm);
    border-radius: var(--radius-md);
    height: 40px;
    width: 40px;

    &.yellow {
      background-color: #ffeecd;
      color: #ffbe3e;
    }

    &.blue {
      background-color: #dae5ef;
      color: #a3c6f1;
    }

    &.off {
      background-color: #e6e6e6;
      color: #9f9f9f;
    }
  }

  .icon-container svg {
    display: block;
    width: 100%;
    height: 100%;
  }

  .text-container {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    font-size: var(--font-size-caption);
    text-wrap: nowrap;
  }

  .text-container p:last-child {
    opacity: 0.6;
  }
</style>
