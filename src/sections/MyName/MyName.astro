---
import Button from "@components/Button/Button.astro";
import Column from "@components/Grid/Column.astro";
import Row from "@components/Grid/Row.astro";
import { Icon } from "astro-icon/components";
---

<astro-my-name>
  <Column spacing="2xl">
    <Column spacing="xl">
      <h1>
        <span>Hey ! I'm Nicolás Vera</span><br />
        <span>I design and develop</span>
        <span>thoughtful solutions</span>
        <span
          >centered on <span class="highlight">user's experience.</span>—</span
        >
      </h1>
      <Row class="asterisk-list" spacing="md" align="center">
        <p>Software Engineer</p>
        <Icon is:inline={true} name="asterisk" />
        <p>Buenos Aires</p>
        <Icon is:inline={true} name="asterisk" />
        <p>Argentina</p>
      </Row>
    </Column>
    <Row class="buttons" spacing="md">
      <Button href="">Download CV</Button>
      <Button href="" outline>Contact me</Button>
    </Row>
  </Column>
</astro-my-name>

<style>
  h1 {
    text-align: start;
    font-size: var(--font-size-display);
    font-weight: 600;
    margin: 0;

    .highlight {
      color: var(--color-secondary);
    }
  }

  .asterisk-list {
    font-size: var(--font-size-h4);

    p {
      margin: 0;
    }

    svg {
      width: 8px;
      height: 8px;
    }
  }
</style>

<script>
  import { gsap } from "gsap";
  import { vhPercent } from "@scripts/utils/gsap";

  class MyNameContainer extends HTMLElement {
    constructor() {
      super();
      gsap.context(() => {
        this.getShowSectionAnim(75);
        this.getTextHighlightAnim(50, 70);
      }, this);
    }

    getShowSectionAnim(startPercent: number) {
      gsap.fromTo(
        "h1, .asterisk-list, .buttons",
        { opacity: 0, x: -20 },
        {
          ease: "expo.inOut",
          opacity: 1,
          x: 0,
          scrollTrigger: {
            trigger: this,
            start: () => "top " + vhPercent(startPercent),
            end: "bottom top",
            toggleActions: "play none none reverse",
          },
        }
      );
    }

    getTextHighlightAnim(startPercent: number, endPercent: number) {
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: "h1",
          start: () => "top " + vhPercent(startPercent),
          end: "bottom " + vhPercent(endPercent),
          scrub: 0.5,
          invalidateOnRefresh: true,
        },
      });

      const spans = gsap.utils.toArray<HTMLElement>("h1 > span");

      spans.map((span, i, all) => {
        const ease = i === all.length - 1 ? "power4.out" : "slow(0.3, 0, true)";
        tl.fromTo(
          span,
          { opacity: 0.2, filter: "grayscale(1)" },
          { ease, duration: 1, opacity: 1, filter: "grayscale(0)" },
          ">-=0.3"
        );
      });
    }
  }

  customElements.define("astro-my-name", MyNameContainer);
</script>
