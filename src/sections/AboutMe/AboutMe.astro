---
import GridCol from "@components/Grid/GridCol.astro";
import GridOffset from "@components/Grid/GridOffset.astro";
import GridRow from "@components/Grid/GridRow.astro";
import { Icon } from "astro-icon/components";
import BadgeCertification from "./elements/BadgeCertification/BadgeCertification.astro";

const skills = [
  "React",
  "Typescript",
  "Next.js",
  "Node.js",
  "Java",
  "Docker",
  "SQL",
  "NoSQL",
  "AWS",
];
---

<astro-about-me-anim-container>
  <GridRow>
    <GridCol xs={12}>
      <div class="line"></div>
    </GridCol>
  </GridRow>
  <div class="about-me">
    <GridRow>
      <GridCol xs={12}>
        <div class="title">
          <h2>About.</h2>
          <Icon class="about-art" name="about-art" />
        </div>
      </GridCol>
    </GridRow>
    <GridRow>
      <!-- <GridCol xs={5}>
      <h2>Ab<br />out.</h2>
    </GridCol> -->
      <GridOffset xs={5} />
      <GridCol xs="auto">
        <div class="text">
          <p>
            I am a <span class="highlight">Computer Science graduate</span> with
            a passion for technology. I have developed a strong foundation in computer
            science concepts and programming languages, which helps me quickly learn
            new skills and technologies.
          </p>
          <p class="highlight">
            â€” I understand the importance of user experience and always strive
            to create intuitive and enjoyable interfaces for the people using my
            applications.
            <Icon class="red-brush" name={"red-brush"} />
          </p>
        </div>
      </GridCol>
    </GridRow>
    <!-- <GridRow>
    <div class="skills">
      {
        skills.map((skill, i, all) =>
          i === all.length - 1 ? (
            <p>{skill}</p>
          ) : (
            <Fragment>
              <>
                <p>{skill}</p>
                <Icon name={"asterisk"} />
              </>
            </Fragment>
          )
        )
      }
    </div>
  </GridRow> -->

    <GridRow>
      <GridOffset xs={3} />
      <GridCol xs={6}>
        <div class="skills">
          <p class="title">SKILLS</p>
          <p class="text">
            I feel comfortable working with both backend and frontend
            technologies
          </p>
          <div class="certifications">
            <BadgeCertification>AWS Cloud Practitioner</BadgeCertification>
            <BadgeCertification>Azure Fundamentals</BadgeCertification>
          </div>
        </div>
      </GridCol>
    </GridRow>
    <GridRow>
      <GridOffset xs={3} />
      <GridCol xs={6}>
        <div class="skill-icons">
          <img src="/media/skills/Docker.svg" />
          <img src="/media/skills/java.svg" />
          <img src="/media/skills/Javascript.svg" />
          <img src="/media/skills/MongoDb.svg" />
          <img src="/media/skills/nestjs.svg" />
          <img src="/media/skills/NextJs.svg" />
          <img src="/media/skills/NodeJs.svg" />
          <img src="/media/skills/PostgreSQL.svg" />
          <img src="/media/skills/React.svg" />
          <img src="/media/skills/Typescript.svg" />
        </div>
      </GridCol>
    </GridRow>
  </div>
</astro-about-me-anim-container>

<style>
  .about-me {
    position: relative;
    margin-top: 10vh;
  }

  .title {
    position: relative;
    width: 100%;
    margin-bottom: var(--spacing-4xl);

    h2 {
      display: inline-block;
      font-size: var(--font-size-display-xl);
      font-weight: 400;
      -webkit-text-stroke: 1px var(--color-text);
      color: transparent;
      /* color: var(--color-text); */
      margin: 0;
      margin-bottom: var(--spacing-2xl);
      line-height: 80%;
    }

    .about-art {
      width: 600px;
      height: 500px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      bottom: -100px;
      z-index: -1;
    }
  }

  .text {
    position: relative;
    line-height: 160%;
    z-index: 1;
    display: flex;
    flex-direction: column;
    font-size: var(--font-size-h3);

    .highlight {
      font-weight: 600;
    }
  }

  [data-icon="red-brush"] {
    position: absolute;
    width: 400px;
    height: 400px;
    bottom: -150px;
    right: -50px;
  }

  .skills {
    margin-top: 30vh;
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-content: center;

    .title {
      font-size: var(--font-size-caption);
      text-transform: uppercase;
      letter-spacing: 3px;
    }
  }

  .skill-icons {
    margin-top: 64px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 40px;

    img {
      height: 64px;
      width: 64px;
    }
  }

  .certifications {
    display: flex;
    flex-direction: row;
    justify-content: center;
    gap: var(--spacing-lg);
  }

  /* .line {
    border-bottom: 1px solid var(--color-text);
    width: 100%;
    margin-bottom: var(--spacing-xl);
  } */
</style>

<script>
  import { gsap } from "gsap";

  class AboutMeAnimContainer extends HTMLElement {
    constructor() {
      super();

      gsap.context(() => {
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: "h2",
            // markers: true,
            start: "center center",
            end: "center center+=80",
            toggleActions: "play none reverse none",
          },
        });

        tl.fromTo(
          "h2",
          {
            position: "relative",
            left: "50%",
            xPercent: -50,
            color: "black",
          },
          {
            ease: "power2.inOut",
            left: "0",
            color: "transparent",
            xPercent: 0,
            duration: 0.5,
          },
          0
        );
        tl.to("h2", { opacity: 0.4, duration: 0.1 });

        tl.to(".about-art", { opacity: 0, duration: 0.1 }, 0);

        tl.from(
          ".text",
          {
            opacity: 0,
            // y: 50,
          },
          0.5
        );

        gsap.from(".red-brush", {
          opacity: 0,
          duration: 0.4,
          scrollTrigger: {
            trigger: ".red-brush",
            start: "bottom bottom",
            end: "bottom bottom",
            toggleActions: "play none reverse none",
          },
        });

        gsap.to(".text", {
          y: -100,
          scrollTrigger: { trigger: ".about-me", scrub: 1 },
        });
      }, this);
    }
  }

  customElements.define("astro-about-me-anim-container", AboutMeAnimContainer);
</script>
